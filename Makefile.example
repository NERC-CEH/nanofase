# Modules in compilation order.
modules = vendor/feh/src/ErrorInstance.f08 \
	vendor/feh/src/Result.f08 \
	vendor/feh/src/ErrorHandler.f08 \
	vendor/feh/src/ErrorCriteria.f08 \
	src/Globals.f08 \
	src/Biota/spcBiota.f08 \
	src/Biota/classBiota1.f08 \
	src/Biota/classBiota2.f08 \
	src/Reactor/spcReactor.f08 \
	src/Reactor/classReactor1.f08 \
	src/Reactor/classReactor2.f08 \
	src/spcBedSedimentLayer.f08 \
	src/classBedSedimentLayer1.f08 \
	src/classBedSedimentLayer2.f08 \
	src/spcBedSediment.f08 \
	src/main.f08

# Where should the output .exe be placed and run?
outputFile = S:/ECP/CPG/model_FORTRAN/exec/fprog_source_sl
flags = -g -O1 -fcheck=all -fcheck-no-bounds -fbackslash -Wall -Wno-unused-dummy-argument
netcdf = `nf-config --fflags --flibs`

# The commands:
# 	make main: Compile and create exe with default errors.
# 	make compile: Only compile, don't create exe.
# 	make run: Same as `make main`, but run the exe as well.
# 	make debug: Compile and create exe with extra debugging.
# 	make debug: Same as `make debug`, but run the exe as well.
# 	make gdb: Run gdb for the exe.
# 	make clean: Remove compiled files.
# 	
# 	-O0 flag would be preferable but a GFortran bug causes character
# 	length mismatch in array constructor errors with allocatable
# 	character variables, even when they're the correct length. See
# 	https://gcc.gnu.org/bugzilla/show_bug.cgi?id=70231 and
# 	https://stackoverflow.com/questions/44385909/adding-to-an-array-of-characters-in-fortran.
# 	Solution is to use -O1 or higher.
main: $(modules)
	gfortran $(vendor) $(modules) $(flags)  -o "$(outputFile)" $(netcdf)
compile: $(modules)
	gfortran -c $(vendor) $(modules)
run: $(modules)
	gfortran $(vendor) $(modules) -g -O1 -fcheck=all -fbackslash -Wall -Wno-unused-dummy-argument -o "$(outputFile)" $(netcdf) && "$(outputFile)"
debug-run: $(modules)
	gfortran $(vendor) $(modules) -g3 -O1 -fbackslash -Wall -Wextra -Warray-temporaries -Wconversion -fimplicit-none -fbacktrace -ffree-line-length-0 -fcheck=all -ffpe-trap=zero,overflow,underflow -finit-real=nan -o "$(outputFile)" $(netcdf) && "$(outputFile)"
debug: $(modules)
	gfortran $(vendor) $(modules) -g3 -O1 -fbackslash -Wall -Wextra -Warray-temporaries -Wconversion -fimplicit-none -fbacktrace -ffree-line-length-0 -fcheck=all -ffpe-trap=zero,overflow,underflow -finit-real=nan -o "$(outputFile)" $(netcdf)
gdb: $(modules)
	make debug && gdb $(outputFile)
clean:
	rm -f *.mod *.o *.stackdump